<?xml version="1.0" ?>
<launch>
  
  <param name="~base_calibration_name" value="WristCalSrv"/>

  <include file="$(find ur_gazebo)/launch/ur10.launch">
     <arg name="limited" value="true"/>
  </include>
  
  <include file="$(find ur10_moveit_config)/launch/ur10_moveit_planning_execution.launch">
     <arg name="sim" value="true"/>
     <arg name="limited" value="true"/>
  </include>

  <include file="$(find ur10_moveit_config)/launch/moveit_rviz.launch">
     <arg name="config" value="true"/>
  </include>


  <!-- Launch mutable joint state publisher for calibratable transforms  -->
  <node  name="r430_camera_locs" pkg="industrial_extrinsic_cal" type="mutable_joint_state_publisher" >
    <param name="mutable_joint_state_yaml_file" value="$(find industrial_extrinsic_cal)/yaml/r430_camera_def.yaml" />	
    <remap from="mutable_joint_states" to="Robot1/joint_states"/>
    <param name="overwrite_mutable_values" value="true" />
  </node>

  <!-- joint state publisher which combines the mutable and the real joint states for the scene -->
  <node name="combined_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >

     <!-- joint_state_publisher will forward joints it recieves on the topics specified in the 'source_list' parameter -->
     <rosparam param="source_list">["Robot1/joint_states", "mutable_joint_states"]</rosparam>
<!--
     <param name="publish_default_velocities" value="true" />
     <param name="publish_default_efforts" value="true" />
     <param name="publish_default_positions" value="true" />
-->
  </node>

  <!-- Launch service which is called to to indicate scene is ready  when someone needs to set a parameter to indicate scene is ready -->
  <node pkg="industrial_extrinsic_cal" type="trigger_service" name="rosSceneTrigger" output="screen" />

  <!-- Launch service which is called to to indicate scene is ready  when a robot action is required to update the scene -->
  <node pkg="industrial_extrinsic_cal" type="ros_robot_trigger_action_service" name="rosRobotSceneTrigger" output="screen" />


  <!--Launch manual_calt_adjust serviece to be able to move camera into approximatly the correct position also adjust the last two arguments if you want to be able to move a smaller or larger amount-->
  <node pkg="industrial_extrinsic_cal" type="manual_calt_adjust" name="manual_part_adjust" args="r430_1 .2 .2"/>

  <node name="joint_traj" pkg="caljob_creator" type="joint_traj_node" output="screen">
    <param name="input_file" value="$(find ur10_moveit_config)/config/joint_traj.yaml"/>
    <param name="output_file" value="$(find ur10_moveit_config)/config/joint_traj_new.yaml"/>
    <param name="motion_server" value="rosRobotSceneTrigger_joint_values"/>
    <param name="joints_topic" value="/Robot1/joint_states"/>
    <param name="trigger_server" value="/WristCalSrvObs"/>
    <param name="pause_time" value="2.0"/>	
  </node>

  <!-- launch wrist_cal_srv for rviz plugin gui -->
  <node pkg="industrial_extrinsic_cal" type="wrist_cal_srv" name="wrist_cal_srv">
    <param name="yaml_file_path" value="$(find industrial_extrinsic_cal)/yaml/"/>
    <param name="camera_file" value="real_sense_2.yaml"/>
    <param name="target_file" value="m10x10.yaml"/>
    <param name="target_mount_frame" value="world"/>
    <param name="camera_mount_frame" value="tool0"/>
    <param name="save_data" value="true"/>	
    <param name="data_directory" value="(find industrial_extrinsic_cal)/data"/>
  </node>


</launch>
